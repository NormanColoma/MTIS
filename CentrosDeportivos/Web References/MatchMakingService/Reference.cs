//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34014.
// 
#pragma warning disable 1591

namespace CentrosDeportivos.MatchMakingService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MatchMakingServiceSOAP", Namespace="http://www.example.org/MatchMakingService/")]
    public partial class MatchMakingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMatchsAvailablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMatchScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSportCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSportMatchOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MatchMakingService() {
            this.Url = global::CentrosDeportivos.Properties.Settings.Default.CentrosDeportivos_MatchMakingService_MatchMakingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createMatchCompletedEventHandler createMatchCompleted;
        
        /// <remarks/>
        public event deleteMatchCompletedEventHandler deleteMatchCompleted;
        
        /// <remarks/>
        public event confirmMatchCompletedEventHandler confirmMatchCompleted;
        
        /// <remarks/>
        public event insertTeamCompletedEventHandler insertTeamCompleted;
        
        /// <remarks/>
        public event getMatchCompletedEventHandler getMatchCompleted;
        
        /// <remarks/>
        public event getMatchsAvailablesCompletedEventHandler getMatchsAvailablesCompleted;
        
        /// <remarks/>
        public event getMatchScheduleCompletedEventHandler getMatchScheduleCompleted;
        
        /// <remarks/>
        public event getSportCenterCompletedEventHandler getSportCenterCompleted;
        
        /// <remarks/>
        public event getSportMatchCompletedEventHandler getSportMatchCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/createMatch", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createMatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Match match, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool ok) {
            object[] results = this.Invoke("createMatch", new object[] {
                        match});
            ok = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createMatchAsync(Match match) {
            this.createMatchAsync(match, null);
        }
        
        /// <remarks/>
        public void createMatchAsync(Match match, object userState) {
            if ((this.createMatchOperationCompleted == null)) {
                this.createMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMatchOperationCompleted);
            }
            this.InvokeAsync("createMatch", new object[] {
                        match}, this.createMatchOperationCompleted, userState);
        }
        
        private void OncreateMatchOperationCompleted(object arg) {
            if ((this.createMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMatchCompleted(this, new createMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/deleteMatch", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ok", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleteMatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int macthID) {
            object[] results = this.Invoke("deleteMatch", new object[] {
                        macthID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMatchAsync(int macthID) {
            this.deleteMatchAsync(macthID, null);
        }
        
        /// <remarks/>
        public void deleteMatchAsync(int macthID, object userState) {
            if ((this.deleteMatchOperationCompleted == null)) {
                this.deleteMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMatchOperationCompleted);
            }
            this.InvokeAsync("deleteMatch", new object[] {
                        macthID}, this.deleteMatchOperationCompleted, userState);
        }
        
        private void OndeleteMatchOperationCompleted(object arg) {
            if ((this.deleteMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMatchCompleted(this, new deleteMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/confirmMatch", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string confirmMatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id) {
            object[] results = this.Invoke("confirmMatch", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmMatchAsync(int id) {
            this.confirmMatchAsync(id, null);
        }
        
        /// <remarks/>
        public void confirmMatchAsync(int id, object userState) {
            if ((this.confirmMatchOperationCompleted == null)) {
                this.confirmMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmMatchOperationCompleted);
            }
            this.InvokeAsync("confirmMatch", new object[] {
                        id}, this.confirmMatchOperationCompleted, userState);
        }
        
        private void OnconfirmMatchOperationCompleted(object arg) {
            if ((this.confirmMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmMatchCompleted(this, new confirmMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/insertTeam", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertTeam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool status) {
            object[] results = this.Invoke("insertTeam", new object[] {
                        id_team});
            status = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertTeamAsync(int id_team) {
            this.insertTeamAsync(id_team, null);
        }
        
        /// <remarks/>
        public void insertTeamAsync(int id_team, object userState) {
            if ((this.insertTeamOperationCompleted == null)) {
                this.insertTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertTeamOperationCompleted);
            }
            this.InvokeAsync("insertTeam", new object[] {
                        id_team}, this.insertTeamOperationCompleted, userState);
        }
        
        private void OninsertTeamOperationCompleted(object arg) {
            if ((this.insertTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertTeamCompleted(this, new insertTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/getMatch", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("match", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Match getMatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_match) {
            object[] results = this.Invoke("getMatch", new object[] {
                        id_match});
            return ((Match)(results[0]));
        }
        
        /// <remarks/>
        public void getMatchAsync(int id_match) {
            this.getMatchAsync(id_match, null);
        }
        
        /// <remarks/>
        public void getMatchAsync(int id_match, object userState) {
            if ((this.getMatchOperationCompleted == null)) {
                this.getMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMatchOperationCompleted);
            }
            this.InvokeAsync("getMatch", new object[] {
                        id_match}, this.getMatchOperationCompleted, userState);
        }
        
        private void OngetMatchOperationCompleted(object arg) {
            if ((this.getMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMatchCompleted(this, new getMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/getMatchsAvailables", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("matchs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Match[] getMatchsAvailables([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sport) {
            object[] results = this.Invoke("getMatchsAvailables", new object[] {
                        sport});
            return ((Match[])(results[0]));
        }
        
        /// <remarks/>
        public void getMatchsAvailablesAsync(string sport) {
            this.getMatchsAvailablesAsync(sport, null);
        }
        
        /// <remarks/>
        public void getMatchsAvailablesAsync(string sport, object userState) {
            if ((this.getMatchsAvailablesOperationCompleted == null)) {
                this.getMatchsAvailablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMatchsAvailablesOperationCompleted);
            }
            this.InvokeAsync("getMatchsAvailables", new object[] {
                        sport}, this.getMatchsAvailablesOperationCompleted, userState);
        }
        
        private void OngetMatchsAvailablesOperationCompleted(object arg) {
            if ((this.getMatchsAvailablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMatchsAvailablesCompleted(this, new getMatchsAvailablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/getMatchSchedule", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("date", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getMatchSchedule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team) {
            object[] results = this.Invoke("getMatchSchedule", new object[] {
                        id_team});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMatchScheduleAsync(int id_team) {
            this.getMatchScheduleAsync(id_team, null);
        }
        
        /// <remarks/>
        public void getMatchScheduleAsync(int id_team, object userState) {
            if ((this.getMatchScheduleOperationCompleted == null)) {
                this.getMatchScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMatchScheduleOperationCompleted);
            }
            this.InvokeAsync("getMatchSchedule", new object[] {
                        id_team}, this.getMatchScheduleOperationCompleted, userState);
        }
        
        private void OngetMatchScheduleOperationCompleted(object arg) {
            if ((this.getMatchScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMatchScheduleCompleted(this, new getMatchScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/getSportCenter", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sportCenter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getSportCenter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team) {
            object[] results = this.Invoke("getSportCenter", new object[] {
                        id_team});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getSportCenterAsync(int id_team) {
            this.getSportCenterAsync(id_team, null);
        }
        
        /// <remarks/>
        public void getSportCenterAsync(int id_team, object userState) {
            if ((this.getSportCenterOperationCompleted == null)) {
                this.getSportCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSportCenterOperationCompleted);
            }
            this.InvokeAsync("getSportCenter", new object[] {
                        id_team}, this.getSportCenterOperationCompleted, userState);
        }
        
        private void OngetSportCenterOperationCompleted(object arg) {
            if ((this.getSportCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSportCenterCompleted(this, new getSportCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/MatchMakingService/getSportMatch", RequestNamespace="http://www.example.org/MatchMakingService/", ResponseNamespace="http://www.example.org/MatchMakingService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("id_sport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getSportMatch([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team) {
            object[] results = this.Invoke("getSportMatch", new object[] {
                        id_team});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getSportMatchAsync(int id_team) {
            this.getSportMatchAsync(id_team, null);
        }
        
        /// <remarks/>
        public void getSportMatchAsync(int id_team, object userState) {
            if ((this.getSportMatchOperationCompleted == null)) {
                this.getSportMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSportMatchOperationCompleted);
            }
            this.InvokeAsync("getSportMatch", new object[] {
                        id_team}, this.getSportMatchOperationCompleted, userState);
        }
        
        private void OngetSportMatchOperationCompleted(object arg) {
            if ((this.getSportMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSportMatchCompleted(this, new getSportMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/MatchMakingService/")]
    public partial class Match {
        
        private int idField;
        
        private string dateField;
        
        private int team1Field;
        
        private int team2Field;
        
        private int sportField;
        
        private int sportCentreField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int team1 {
            get {
                return this.team1Field;
            }
            set {
                this.team1Field = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int team2 {
            get {
                return this.team2Field;
            }
            set {
                this.team2Field = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sportCentre {
            get {
                return this.sportCentreField;
            }
            set {
                this.sportCentreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createMatchCompletedEventHandler(object sender, createMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ok {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteMatchCompletedEventHandler(object sender, deleteMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void confirmMatchCompletedEventHandler(object sender, confirmMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void insertTeamCompletedEventHandler(object sender, insertTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMatchCompletedEventHandler(object sender, getMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Match Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Match)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMatchsAvailablesCompletedEventHandler(object sender, getMatchsAvailablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMatchsAvailablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMatchsAvailablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Match[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Match[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMatchScheduleCompletedEventHandler(object sender, getMatchScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMatchScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMatchScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSportCenterCompletedEventHandler(object sender, getSportCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSportCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSportCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSportMatchCompletedEventHandler(object sender, getSportMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSportMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSportMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591