//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34209.
// 
#pragma warning disable 1591

namespace CentrosDeportivos.TeamService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TeamServiceSOAP", Namespace="http://www.example.org/TeamService/")]
    public partial class TeamService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback notifyPlayersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaptainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamsInMatchMakingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamByNIFOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TeamService() {
            this.Url = global::CentrosDeportivos.Properties.Settings.Default.CentrosDeportivos_TeamService_TeamService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createTeamCompletedEventHandler createTeamCompleted;
        
        /// <remarks/>
        public event deleteTeamCompletedEventHandler deleteTeamCompleted;
        
        /// <remarks/>
        public event updateTeamCompletedEventHandler updateTeamCompleted;
        
        /// <remarks/>
        public event notifyPlayersCompletedEventHandler notifyPlayersCompleted;
        
        /// <remarks/>
        public event addPlayerCompletedEventHandler addPlayerCompleted;
        
        /// <remarks/>
        public event getCaptainCompletedEventHandler getCaptainCompleted;
        
        /// <remarks/>
        public event getTeamCompletedEventHandler getTeamCompleted;
        
        /// <remarks/>
        public event getTeamsInMatchMakingCompletedEventHandler getTeamsInMatchMakingCompleted;
        
        /// <remarks/>
        public event getTeamByNIFCompletedEventHandler getTeamByNIFCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/createTeam", RequestNamespace="http://www.example.org/TeamService/", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createTeam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Team team, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool ok) {
            object[] results = this.Invoke("createTeam", new object[] {
                        team});
            ok = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createTeamAsync(Team team) {
            this.createTeamAsync(team, null);
        }
        
        /// <remarks/>
        public void createTeamAsync(Team team, object userState) {
            if ((this.createTeamOperationCompleted == null)) {
                this.createTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTeamOperationCompleted);
            }
            this.InvokeAsync("createTeam", new object[] {
                        team}, this.createTeamOperationCompleted, userState);
        }
        
        private void OncreateTeamOperationCompleted(object arg) {
            if ((this.createTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTeamCompleted(this, new createTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/deleteTeam", RequestNamespace="http://www.example.org/TeamService/", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deleteTeam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool boolean) {
            object[] results = this.Invoke("deleteTeam", new object[] {
                        id});
            boolean = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTeamAsync(int id) {
            this.deleteTeamAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteTeamAsync(int id, object userState) {
            if ((this.deleteTeamOperationCompleted == null)) {
                this.deleteTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTeamOperationCompleted);
            }
            this.InvokeAsync("deleteTeam", new object[] {
                        id}, this.deleteTeamOperationCompleted, userState);
        }
        
        private void OndeleteTeamOperationCompleted(object arg) {
            if ((this.deleteTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTeamCompleted(this, new deleteTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/updateTeam", RequestNamespace="http://www.example.org/TeamService/", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string updateTeam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] Team team, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool boolean) {
            object[] results = this.Invoke("updateTeam", new object[] {
                        team});
            boolean = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateTeamAsync(Team team) {
            this.updateTeamAsync(team, null);
        }
        
        /// <remarks/>
        public void updateTeamAsync(Team team, object userState) {
            if ((this.updateTeamOperationCompleted == null)) {
                this.updateTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTeamOperationCompleted);
            }
            this.InvokeAsync("updateTeam", new object[] {
                        team}, this.updateTeamOperationCompleted, userState);
        }
        
        private void OnupdateTeamOperationCompleted(object arg) {
            if ((this.updateTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTeamCompleted(this, new updateTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/notifyPlayers", RequestNamespace="http://www.example.org/TeamService/", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string notifyPlayers([System.Xml.Serialization.XmlElementAttribute("players", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] players) {
            object[] results = this.Invoke("notifyPlayers", new object[] {
                        players});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void notifyPlayersAsync(string[] players) {
            this.notifyPlayersAsync(players, null);
        }
        
        /// <remarks/>
        public void notifyPlayersAsync(string[] players, object userState) {
            if ((this.notifyPlayersOperationCompleted == null)) {
                this.notifyPlayersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotifyPlayersOperationCompleted);
            }
            this.InvokeAsync("notifyPlayers", new object[] {
                        players}, this.notifyPlayersOperationCompleted, userState);
        }
        
        private void OnnotifyPlayersOperationCompleted(object arg) {
            if ((this.notifyPlayersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notifyPlayersCompleted(this, new notifyPlayersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/addPlayer", RequestNamespace="http://www.example.org/TeamService/", ResponseElementName="addPlayerResponse1", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addPlayer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool status) {
            object[] results = this.Invoke("addPlayer", new object[] {
                        email,
                        id_team});
            status = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPlayerAsync(string email, int id_team) {
            this.addPlayerAsync(email, id_team, null);
        }
        
        /// <remarks/>
        public void addPlayerAsync(string email, int id_team, object userState) {
            if ((this.addPlayerOperationCompleted == null)) {
                this.addPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPlayerOperationCompleted);
            }
            this.InvokeAsync("addPlayer", new object[] {
                        email,
                        id_team}, this.addPlayerOperationCompleted, userState);
        }
        
        private void OnaddPlayerOperationCompleted(object arg) {
            if ((this.addPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPlayerCompleted(this, new addPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/getCaptain", RequestNamespace="http://www.example.org/TeamService/", ResponseElementName="getCaptainResponse1", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool getCaptain([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nif, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string email) {
            object[] results = this.Invoke("getCaptain", new object[] {
                        nif});
            email = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getCaptainAsync(string nif) {
            this.getCaptainAsync(nif, null);
        }
        
        /// <remarks/>
        public void getCaptainAsync(string nif, object userState) {
            if ((this.getCaptainOperationCompleted == null)) {
                this.getCaptainOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaptainOperationCompleted);
            }
            this.InvokeAsync("getCaptain", new object[] {
                        nif}, this.getCaptainOperationCompleted, userState);
        }
        
        private void OngetCaptainOperationCompleted(object arg) {
            if ((this.getCaptainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaptainCompleted(this, new getCaptainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/getTeam", RequestNamespace="http://www.example.org/TeamService/", ResponseElementName="getTeamResponse1", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Team getTeam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_team) {
            object[] results = this.Invoke("getTeam", new object[] {
                        id_team});
            return ((Team)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamAsync(int id_team) {
            this.getTeamAsync(id_team, null);
        }
        
        /// <remarks/>
        public void getTeamAsync(int id_team, object userState) {
            if ((this.getTeamOperationCompleted == null)) {
                this.getTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamOperationCompleted);
            }
            this.InvokeAsync("getTeam", new object[] {
                        id_team}, this.getTeamOperationCompleted, userState);
        }
        
        private void OngetTeamOperationCompleted(object arg) {
            if ((this.getTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamCompleted(this, new getTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/getTeamsInMatchMaking", RequestNamespace="http://www.example.org/TeamService/", ResponseElementName="getTeamsInMatchMakingResponse1", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("teams", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Team[] getTeamsInMatchMaking([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sport) {
            object[] results = this.Invoke("getTeamsInMatchMaking", new object[] {
                        sport});
            return ((Team[])(results[0]));
        }
        
        /// <remarks/>
        public void getTeamsInMatchMakingAsync(string sport) {
            this.getTeamsInMatchMakingAsync(sport, null);
        }
        
        /// <remarks/>
        public void getTeamsInMatchMakingAsync(string sport, object userState) {
            if ((this.getTeamsInMatchMakingOperationCompleted == null)) {
                this.getTeamsInMatchMakingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamsInMatchMakingOperationCompleted);
            }
            this.InvokeAsync("getTeamsInMatchMaking", new object[] {
                        sport}, this.getTeamsInMatchMakingOperationCompleted, userState);
        }
        
        private void OngetTeamsInMatchMakingOperationCompleted(object arg) {
            if ((this.getTeamsInMatchMakingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamsInMatchMakingCompleted(this, new getTeamsInMatchMakingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/TeamService/getTeamByNIF", RequestNamespace="http://www.example.org/TeamService/", ResponseElementName="getTeamByNIFResponse1", ResponseNamespace="http://www.example.org/TeamService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("match", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Team getTeamByNIF([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nif) {
            object[] results = this.Invoke("getTeamByNIF", new object[] {
                        nif});
            return ((Team)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamByNIFAsync(string nif) {
            this.getTeamByNIFAsync(nif, null);
        }
        
        /// <remarks/>
        public void getTeamByNIFAsync(string nif, object userState) {
            if ((this.getTeamByNIFOperationCompleted == null)) {
                this.getTeamByNIFOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamByNIFOperationCompleted);
            }
            this.InvokeAsync("getTeamByNIF", new object[] {
                        nif}, this.getTeamByNIFOperationCompleted, userState);
        }
        
        private void OngetTeamByNIFOperationCompleted(object arg) {
            if ((this.getTeamByNIFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamByNIFCompleted(this, new getTeamByNIFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TeamService/")]
    public partial class Team {
        
        private int idField;
        
        private string nameField;
        
        private string sportField;
        
        private string imgField;
        
        private string captainField;
        
        private Member[] playersField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string img {
            get {
                return this.imgField;
            }
            set {
                this.imgField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string captain {
            get {
                return this.captainField;
            }
            set {
                this.captainField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute("players", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Member[] players {
            get {
                return this.playersField;
            }
            set {
                this.playersField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.example.org/TeamService/")]
    public partial class Member {
        
        private string nameField;
        
        private string passField;
        
        private string surnameField;
        
        private string emailField;
        
        private string cityField;
        
        private string provinceField;
        
        private string nIFField;
        
        private string imgField;
        
        private bool vIPField;
        
        private string sportCenterField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pass {
            get {
                return this.passField;
            }
            set {
                this.passField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NIF {
            get {
                return this.nIFField;
            }
            set {
                this.nIFField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string img {
            get {
                return this.imgField;
            }
            set {
                this.imgField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool VIP {
            get {
                return this.vIPField;
            }
            set {
                this.vIPField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sportCenter {
            get {
                return this.sportCenterField;
            }
            set {
                this.sportCenterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void createTeamCompletedEventHandler(object sender, createTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ok {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void deleteTeamCompletedEventHandler(object sender, deleteTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool boolean {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void updateTeamCompletedEventHandler(object sender, updateTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool boolean {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void notifyPlayersCompletedEventHandler(object sender, notifyPlayersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class notifyPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal notifyPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void addPlayerCompletedEventHandler(object sender, addPlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getCaptainCompletedEventHandler(object sender, getCaptainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaptainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaptainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getTeamCompletedEventHandler(object sender, getTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getTeamsInMatchMakingCompletedEventHandler(object sender, getTeamsInMatchMakingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamsInMatchMakingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamsInMatchMakingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void getTeamByNIFCompletedEventHandler(object sender, getTeamByNIFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamByNIFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamByNIFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591